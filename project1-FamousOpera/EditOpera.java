
package Project1;

import java.awt.Color;
import java.awt.Toolkit;

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *<pre>
 * Class        EditOpera
 * File         EditOpera.java
 * Project      Famous Operas Database
 * Description  A class uses to edit opera
 * Platform     jdk 1.8.0_214; NetBeans IDE 11.3; Windows 10
 * Course       CS 142, Edmonds Community College
 * Date         1/27/2021
 * History log  1/10/2021, 1/20/2021
 * @author	<i>Nguyen Vi Cao</i>
 * @version 	%1% %2%
 * @see     	java.awt.Color
 * @see         java.awt.Toolkit
 *</pre>
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class EditOpera extends javax.swing.JDialog 
{
    private Opera newOpera;                     //opera to be created
    private boolean error = false;              //checking for errors in input
    private String errorMessage = "";           //error message
    private final int MAX_YEAR = 2021;          //Maximum year 
    private final Color white = Color.WHITE;    //default background color for input textfield
    private final Color pink = Color.PINK;      //background color for bad input textfield
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor     EditOpera()--default constructor
     * Description     Create an instance of the GUI form , set the default
     *                 JButton to be saveJButton, set icon image, centers form,
     *                 and sets the JDialog form to modal
     * @author         <i>Nguyen Vi Cao</i>
     * Date            1/27/2021
     * History log     1/10/2021, 1/20/2021
     *</pre>
     *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/  
    public EditOpera() 
    {
        //super(parent, modal);
        initComponents();
        this.getRootPane().setDefaultButton(saveJButton);
        //set icon
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/Project1/rigoletto-1024x623.jpg"));
        //centers form
        this.setLocationRelativeTo(null);
        nameJTextField.requestFocus();
        newOpera = null;
        setAlwaysOnTop(true);
        setModal(true);
    }

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor     EditOpera()--overloaded copy constructor
     * Description     calls the default constructor to create an instance of 
     *                 the GUI form and populates the data fields for the 
     *                 selected opera.
     * @param          opera Opera
     * @author         <i>Nguyen Vi Cao</i>
     * Date            1/27/2021
     * History log     1/10/2021, 1/20/2021
     *</pre>
     *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/  
    public EditOpera(Opera opera)
    {
        this();
        nameJTextField.setText(opera.getName());
        composerJTextField.setText(String.valueOf(opera.getComposer()));
        yearJTextField.setText(String.valueOf(opera.getYear()));
        cityJTextField.setText(String.valueOf(opera.getCity()));
        sypnosisJTextField.setText(String.valueOf(opera.getSypnosis()));
        linkJTextField.setText(String.valueOf(opera.getLink()));
        nameJTextField.requestFocus();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJPanel = new javax.swing.JPanel();
        logoJLabel = new javax.swing.JLabel();
        titleJLabel = new javax.swing.JLabel();
        displayJPanel = new javax.swing.JPanel();
        nameJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        composerJLabel = new javax.swing.JLabel();
        composerJTextField = new javax.swing.JTextField();
        yearJLabel = new javax.swing.JLabel();
        yearJTextField = new javax.swing.JTextField();
        cityJLabel = new javax.swing.JLabel();
        cityJTextField = new javax.swing.JTextField();
        synopsisJLabel = new javax.swing.JLabel();
        sypnosisJTextField = new javax.swing.JTextField();
        linkJLabel = new javax.swing.JLabel();
        linkJTextField = new javax.swing.JTextField();
        cancelJButton = new javax.swing.JButton();
        saveJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add new Opera");
        setResizable(false);

        logoJLabel.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        logoJLabel.setForeground(new java.awt.Color(51, 0, 0));
        logoJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project1/unnamed.jpg"))); // NOI18N

        titleJLabel.setFont(new java.awt.Font("Tempus Sans ITC", 2, 30)); // NOI18N
        titleJLabel.setForeground(new java.awt.Color(51, 0, 0));
        titleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleJLabel.setText("Edit Opera");

        javax.swing.GroupLayout titleJPanelLayout = new javax.swing.GroupLayout(titleJPanel);
        titleJPanel.setLayout(titleJPanelLayout);
        titleJPanelLayout.setHorizontalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        titleJPanelLayout.setVerticalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logoJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        displayJPanel.setLayout(new java.awt.GridLayout(6, 2, 3, 3));

        nameJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameJLabel.setText("Name of famous opera");
        displayJPanel.add(nameJLabel);

        nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusLost(evt);
            }
        });
        nameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameJTextFieldActionPerformed(evt);
            }
        });
        displayJPanel.add(nameJTextField);

        composerJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        composerJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        composerJLabel.setText("Composer");
        displayJPanel.add(composerJLabel);

        composerJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        composerJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                composerJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(composerJTextField);

        yearJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        yearJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yearJLabel.setText("Year first performed");
        displayJPanel.add(yearJLabel);

        yearJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        yearJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(yearJTextField);

        cityJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cityJLabel.setText("City where first performed");
        displayJPanel.add(cityJLabel);

        cityJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cityJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cityJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(cityJTextField);

        synopsisJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        synopsisJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        synopsisJLabel.setText("Sypnopsis");
        displayJPanel.add(synopsisJLabel);

        sypnosisJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sypnosisJTextField.setAutoscrolls(false);
        sypnosisJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sypnosisJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(sypnosisJTextField);

        linkJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        linkJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        linkJLabel.setText("Link to YouTube");
        displayJPanel.add(linkJLabel);

        linkJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        linkJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                linkJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(linkJTextField);

        cancelJButton.setMnemonic('c');
        cancelJButton.setText("Cancel");
        cancelJButton.setToolTipText("Dispose form");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });

        saveJButton.setMnemonic('s');
        saveJButton.setText("Save");
        saveJButton.setToolTipText("Szve new Opera");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(saveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameJTextFieldActionPerformed

    }//GEN-LAST:event_nameJTextFieldActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        cancelJButtonActionPerformed()
    * Description   Event handler to cancel editing opera: do nothing and
    *               leave newOpera as null
    * @param        evt ActionWvent
    * @see          java.awt.event.ActionEvent
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        saveJButtonActionPerformed()
    * Description   Event handler to edit opera provided data inputed
    *               are valid
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        //local variables needed
        String name = "";
        String composer = "";
        int year = 0;
        String city = "";
        String sypnosis = "";
        String link = "";
        
        //read all inputs as strings
        String operaName = nameJTextField.getText();
        String Composer = composerJTextField.getText();
        String Year = yearJTextField.getText();
        String City = cityJTextField.getText();
        String Sypnosis = sypnosisJTextField.getText();
        String Link = linkJTextField.getText();
        //call appropriate Validation methods to verify input
        if (!Validation.isValidName(operaName))
        {
            errorMessage += "Invalid Opera Name\n";
            nameJTextField.requestFocus();
            error = true;
            nameJTextField.setToolTipText(nameJTextField.getToolTipText() + 
                    "--Invalid Opera Name");
        }
        else if(!Validation.isValidName(Composer))
        {
            errorMessage += "Invalid Composer\n";
            composerJTextField.requestFocus();
            error = true;
            composerJTextField.setToolTipText(nameJTextField.getToolTipText() + 
                    "--Invalid composer");
        }
        else if(!Validation.isInteger(Year, 0, MAX_YEAR))
        {
            errorMessage += "Invalid Year\n";
            yearJTextField.requestFocus();
            error = true;
            yearJTextField.setToolTipText(nameJTextField.getToolTipText() + 
                    "--Invalid Year");
        }
        else if(!Validation.isValidName(City))
        {
            errorMessage += "Invalid City\n";
            cityJTextField.requestFocus();
            error = true;
            cityJTextField.setToolTipText(nameJTextField.getToolTipText() + 
                    "--Invalid City");
        }
        else if(!Validation.isValidText(Sypnosis))
        {
            errorMessage += "Invalid Sypnosis\n";
            sypnosisJTextField.requestFocus();
            error = true;
            sypnosisJTextField.setToolTipText(nameJTextField.getToolTipText() + 
                    "--Invalid Sypnosis");
        }
        else if(!Validation.isValidURL(Link))
        {
            errorMessage += "Invalid Link\n";
            linkJTextField.requestFocus();
            error = true;
            linkJTextField.setToolTipText(nameJTextField.getToolTipText() + 
                    "--Invalid Link");
        }
        else 
            error = false;
        if(!error)
        {
            try
            {
                name = nameJTextField.getText();
                composer = composerJTextField.getText();
                year = Integer.parseInt(yearJTextField.getText());
                city = cityJTextField.getText();
                sypnosis = sypnosisJTextField.getText();
                link = linkJTextField.getText();
                newOpera = new Opera(name, composer, year, city, sypnosis, link);
                this.dispose();
            }
            catch (Exception ex)
            {
                throw new RuntimeException ("Error parsing input");
            }
        }
    }//GEN-LAST:event_saveJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        nameJTextFieldFocusLost()
    * Description   Event handler for the nameJTextField. It changes 
    *               color if input is not valid.
    * @param        evt FocusEvent
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void nameJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameJTextFieldFocusLost
        //set background textfiled color
        String input = nameJTextField.getText();
//        if(Validation.isValidName(input))
//            nameJTextField.setBackground(white);
//        else
//            nameJTextField.setBackground(pink);
    }//GEN-LAST:event_nameJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        composerJTextFieldFocusLost()
    * Description   Event handler for the composerJTextField. It changes 
    *               color if input is not valid.
    * @param        evt FocusEvent
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void composerJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_composerJTextFieldFocusLost
        //set background textfiled color
        String input = composerJTextField.getText();
        if(Validation.isValidName(input))
            composerJTextField.setBackground(white);
        else
            composerJTextField.setBackground(pink);
    }//GEN-LAST:event_composerJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        yearJTextFieldFocusLost()
    * Description   Event handler for the yearJTextField. It changes 
    *               color if input is not valid.
    * @param        evt FocusEvent
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void yearJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearJTextFieldFocusLost
        //set background textfiled color
        String input = yearJTextField.getText();
        if(Validation.isInteger(input, 0, MAX_YEAR))
            yearJTextField.setBackground(white);
        else
            yearJTextField.setBackground(pink);
    }//GEN-LAST:event_yearJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        cityJTextFieldFocusLost()
    * Description   Event handler for the cityJTextField. It changes 
    *               color if input is not valid.
    * @param        evt FocusEvent
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void cityJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cityJTextFieldFocusLost
        //set background textfiled color
        String input = cityJTextField.getText();
        if(Validation.isValidName(input))
            cityJTextField.setBackground(white);
        else
            cityJTextField.setBackground(pink);
    }//GEN-LAST:event_cityJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        sypnosisJTextFieldFocusLost()
    * Description   Event handler for the sypnosisJTextField. It changes 
    *               color if input is not valid.
    * @param        evt FocusEvent
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void sypnosisJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sypnosisJTextFieldFocusLost
        //set background textfiled color
        String input = sypnosisJTextField.getText();
//        if(Validation.isValidText(input))
//            sypnosisJTextField.setBackground(white);
//        else
//            sypnosisJTextField.setBackground(pink);
    }//GEN-LAST:event_sypnosisJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        linkJTextFieldFocusLost()
    * Description   Event handler for the linkJTextField. It changes 
    *               color if input is not valid.
    * @param        evt FocusEvent
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void linkJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_linkJTextFieldFocusLost
        //set background textfiled color
        String input = linkJTextField.getText();
        if(Validation.isValidURL(input))
            linkJTextField.setBackground(white);
        else
            linkJTextField.setBackground(pink);
    }//GEN-LAST:event_linkJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        getOpera()
    * Description   get method to return getOpera
    * @return       getOpera Opera
    * @author       <i>Nguyen Vi Cao</i>
    * Date          1/27/2021
    * History log   1/10/2021, 1/20/2021
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public Opera getOpera()
    {
        return newOpera;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelJButton;
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JTextField cityJTextField;
    private javax.swing.JLabel composerJLabel;
    private javax.swing.JTextField composerJTextField;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JLabel linkJLabel;
    private javax.swing.JTextField linkJTextField;
    private javax.swing.JLabel logoJLabel;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JLabel synopsisJLabel;
    private javax.swing.JTextField sypnosisJTextField;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JPanel titleJPanel;
    private javax.swing.JLabel yearJLabel;
    private javax.swing.JTextField yearJTextField;
    // End of variables declaration//GEN-END:variables
}
